$a: 10  ;
$duration: 1.335s;
$r: 30px;
$pi: 3.14159265359;
$_precision: 10;

@function pow($base, $exp) {
  $value: $base;
  @if $exp > 1 {
    @for $i from 2 through $exp {
      $value: $value * $base;
    }
  }
  @if $exp < 1 {
    @for $i from 0 through -$exp {
      $value: $value / $base;
    }
  }
  @return $value;
}

@function fact($num) {
  $fact: 1;
  @if $num > 0 {
    @for $i from 1 through $num {
      $fact: $fact * $i;
    }
  }
  @return $fact;
}

@function to-unitless-rad($angle) {
  @if unit($angle) == 'deg' {
    $angle: $angle / 180deg * $pi;
  }
  @if unit($angle) == 'rad' {
    $angle: $angle / 1rad;
  }
  @return $angle;
}

@function sin($angle) {
  $a: to-unitless-rad($angle);
  $sin: $a;
  @for $n from 1 through $_precision {
    $sin: $sin + (pow(-1, $n) / fact(2 * $n + 1) ) * pow($a, (2 * $n + 1));
  }
  @return $sin;
}

@function cos($angle) {
  $a: to-unitless-rad($angle);
  $cos: 1;
  @for $n from 1 through $_precision {
    $cos: $cos + ( pow(-1, $n) / fact(2*$n) ) * pow($a, 2*$n);
  }
  @return $cos;
}

@function tan($angle) {
  @return sin($angle) / cos($angle);
}

.loading {
  position: fixed;
  top: 50%;
  left: 50%;
  z-index: 9999;
  border-radius: 6px;
  width: $r*3+20px;
  height: $r*3+20px;
  transform: translate(-50%, -50%) scale(.75, .75);

  .loading-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff;
    z-index: 1;
    text-align: center;
    font-size: 16px;
    animation-name: loading-text-effect;
    animation-duration: $duration;
    animation-timing-function: cubic-bezier(0, .61, .58, 1);
    animation-iteration-count: infinite;

    img {
      width: 24px;
      height: 24px;
    }
  }

  .loading-loader {
    position: absolute;
    top: 50%;
    left: 50%;
    animation-timing-function: cubic-bezier(0, .61, .58, 1);
    animation-iteration-count: infinite;
    animation-duration: $duration;
  }
}

@for $i from 1 through 6 {
  .loading-loader {
    &:nth-child(#{$i}) {
      animation-name: hexa-#{$i};
    }
  }
  $angle: $i * 60deg - 60deg - 90deg;
  @keyframes hexa-#{$i} {
    0% {
      transform: translate(-50%, -50%) translate(cos($angle) * $r/2, sin($angle) * $r/2) rotate(-60deg);
    }

    10% {
      transform: translate(-50%, -50%) translate(cos($angle) * $r*1.5, sin($angle) * $r*1.5) rotate(-60deg);
    }

    40%,
    45% {
      transform: translate(-50%, -50%) translate(cos($angle) * $r*1.5, sin($angle) * $r*1.5) rotate(0deg);
    }

    55%,
    70% {
      transform: translate(-50%, -50%) translate(cos($angle) * $r/2, sin($angle) * $r/2) rotate(0deg);
    }

    90%,
    100% {
      transform: translate(-50%, -50%) translate(cos($angle) * $r/2, sin($angle) * $r/2) rotate(0deg);
    }
  }
}
